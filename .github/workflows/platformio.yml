name: platformio

on:
  push:
    branches: [ unittest, develop, master ]
  pull_request:
    branches: [ unittest, develop, master ]

jobs:
  test:
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v1
      - name: Set up Python
        uses: actions/setup-python@v1
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install platformio
      - name: Run PlatformIO Test
        run: platformio test -e native

  build:
    needs: test
    runs-on: ubuntu-20.04
    strategy:
      matrix:
        target: ['d1_mini', 'lolin32']
    steps:
      - name: Set outputs
        id: vars
        run: echo "::set-output name=sha::$(echo ${{ github.sha }} | cut -c1-7)"
      - name: Check outputs
        run: echo ${{ steps.vars.outputs.sha }}
      - uses: actions/checkout@v1
      - name: Set up Python
        uses: actions/setup-python@v1
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install platformio
      - name: Run PlatformIO Build
        run: platformio run -e ${{ matrix.target }}
        env:
          PLATFORMIO_BUILD_FLAGS: -DESPFC_REVISION=${{ steps.vars.outputs.sha }}
      - name: Artifact espfc_${{ matrix.target }}_${{ steps.vars.outputs.sha }}.bin
        uses: actions/upload-artifact@v1
        with:
          name: espfc_${{ matrix.target }}_${{ steps.vars.outputs.sha }}.bin
          path: .pio/build/${{ matrix.target }}/firmware.bin
