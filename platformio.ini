; PlatformIO Project Configuration File
;
;   Build options: build flags, source filter
;   Upload options: custom upload port, speed and extra flags
;   Library options: dependencies, extra library storages
;   Advanced options: extra scripting
;
; Please visit documentation for the other options and examples
; http://docs.platformio.org/page/projectconf.html
[platformio]
;default_envs = d1_mini, d1_mini_lite, d1_mini_pro, esp12e, esp32doit-devkit-v1, lolin32
;default_envs = d1_mini, lolin32
;default_envs = d1_mini
;default_envs = pico
default_envs = lolin32
;default_envs = native

[common]
build_flags =
  -std=c++14
  -Wall
  -O2
  -DESPFC_DEBUG_SERIAL
;  -DDEBUG_RP2040_PORT=Serial
;  -DDEBUG_RP2040_SPI
;  -DESPFC_DEBUG_PIN=4 ; specify pin number (board specific)
;  -DNO_GLOBAL_INSTANCES
;  -DESPFC_DEV_PRESET_MODES
;  -DESPFC_DEV_PRESET_BLACKBOX=1 ; specify port number (board specific)
;  -DESPFC_DEV_PRESET_DSHOT
;  -DESPFC_DEV_PRESET_SCALER


esp8266_platform = espressif8266
esp8266_framework = arduino
esp8266_board_f_cpu = 160000000L
esp8266_board_f_flash = 80000000L
esp8266_board_flash_mode = qio
esp8266_build_flags =
esp8266_upload_port = /dev/ttyUSB0
;esp8266_upload_speed = 921600
esp8266_upload_speed = 460800
esp8266_monitor_port = /dev/ttyUSB0
esp8266_monitor_speed = 115200

esp32_platform = espressif32
esp32_framework = arduino
esp32_upload_speed = 921600
esp32_monitor_speed = 115200
esp32_build_flags =
esp32_board_f_cpu = 240000000L
esp32_board_f_flash = 80000000L
esp32_board_flash_mode = qio
esp32_upload_port = /dev/ttyUSB0

[env:lolin32]
board = lolin32
platform = ${common.esp32_platform}
framework = ${common.esp32_framework}
board_build.f_cpu =  ${common.esp32_board_f_cpu}
board_build.f_flash = ${common.esp32_board_f_flash}
board_build.flash_mode = ${common.esp32_board_flash_mode}
lib_deps =
build_flags =
  ${common.build_flags}
  ${common.esp32_build_flags}
upload_speed = ${common.esp32_upload_speed}
upload_port = ${common.esp32_upload_port}
monitor_speed = ${common.esp32_monitor_speed}

[env:pico]
board = pico
platform = https://github.com/maxgerhardt/platform-raspberrypi.git
framework = arduino
board_build.core = earlephilhower
build_flags =
  ${common.build_flags}
  -DARCH_RP2040
  -DIRAM_ATTR=""
  #-DIRAM_ATTR='__attribute__ ((section(".time_critical.iram_attr")))'

monitor_speed = 115200
upload_port = /dev/ttyACM0

[env:d1_mini]
board = d1_mini
platform = ${common.esp8266_platform}
framework = ${common.esp8266_framework}
board_build.f_cpu =  ${common.esp8266_board_f_cpu}
board_build.f_flash = ${common.esp8266_board_f_flash}
board_build.flash_mode = ${common.esp8266_board_flash_mode}
board_build.ldscript = eagle.flash.4m3m.ld
lib_deps =
build_flags =
  ${common.build_flags}
  ${common.esp8266_build_flags}
upload_port = ${common.esp8266_upload_port}
upload_speed = ${common.esp8266_upload_speed}
monitor_port = ${common.esp8266_monitor_port}
monitor_speed = ${common.esp8266_monitor_speed}
;monitor_filters = debug

[env:d1_mini_lite]
board = d1_mini_lite
platform = ${common.esp8266_platform}
framework = ${common.esp8266_framework}
board_build.f_cpu =  ${common.esp8266_board_f_cpu}
board_build.f_flash = ${common.esp8266_board_f_flash}
board_build.flash_mode = dout
board_build.ldscript = eagle.flash.1m128.ld
lib_deps =
build_flags =
  ${common.build_flags}
  ${common.esp8266_build_flags}
upload_speed = ${common.esp8266_upload_speed}
monitor_speed = ${common.esp8266_monitor_speed}

[env:d1_mini_pro]
board = d1_mini_pro
platform = ${common.esp8266_platform}
framework = ${common.esp8266_framework}
board_build.f_cpu =  ${common.esp8266_board_f_cpu}
board_build.f_flash = ${common.esp8266_board_f_flash}
board_build.flash_mode = ${common.esp8266_board_flash_mode}
board_build.ldscript = eagle.flash.16m15m.ld
lib_deps =
build_flags =
  ${common.build_flags}
  ${common.esp8266_build_flags}
upload_speed = ${common.esp8266_upload_speed}
monitor_speed = ${common.esp8266_monitor_speed}

[env:esp12e]
board = d1_mini_lite
platform = ${common.esp8266_platform}
framework = ${common.esp8266_framework}
board_build.f_cpu =  ${common.esp8266_board_f_cpu}
board_build.f_flash = ${common.esp8266_board_f_flash}
board_build.flash_mode = ${common.esp8266_board_flash_mode}
board_build.ldscript = eagle.flash.4m3m.ld
lib_deps =
build_flags =
  ${common.build_flags}
  ${common.esp8266_build_flags}
upload_speed = ${common.esp8266_upload_speed}
monitor_speed = ${common.esp8266_monitor_speed}

[env:xiaoblesense]
platform = https://github.com/maxgerhardt/platform-nordicnrf52
board = xiaoblesense
framework = arduino
build_flags =
  ${common.build_flags}
  -DARCH_NRF52840
  -DIRAM_ATTR=""

[env:native]
platform = native
lib_deps = ArduinoFake
build_flags = 
  -DIRAM_ATTR=""
  -DUNIT_TEST
  -std=c++14
  -g
  -DNO_GLOBAL_INSTANCES
#  -DUNITY_INCLUDE_PRINT_FORMATTED

